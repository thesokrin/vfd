#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import argparse
import re

KEY_RE = re.compile(r'^([_\w]+)', re.I)

DESCRIPTION = """
A utility for converting a terraform.tfvars file into variable definitions.
""".strip()

FORMAT = """
variable "{name}" {{
  description = <<-EOF

  EOF
}}
""".strip()


def main():
    parser = argparse.ArgumentParser(description=DESCRIPTION)
    parser.add_argument("tfvars", type=argparse.FileType('rb'), help="The terraform.tfvars to parse.")
    args = parser.parse_args()

    # load the file, stripping whitespace
    lines = map(lambda l: l.decode('utf-8').strip(), args.tfvars.readlines())
    # extract only lines containing keys
    lines = filter(lambda l: KEY_RE.search(l) is not None, lines)
    # bounce down to the keys
    lines = map(lambda l: KEY_RE.search(l).group(1), lines)
    # uniqueify
    keys = sorted(set(lines))

    # print output
    print("\n\n".join(map(lambda k: FORMAT.format(name=k), keys)))

if __name__ == "__main__":
    main()
